Проект “Умные туалеты”

Task: it is necessary to implement a system of smart street toilets, for their distribution. The project includes a theoretical and practical part. The theoretical part is based on the description of the system and algorithm of work. 

Description of work: it is planned to develop a system of street toilets. The user must be able to pay for the service in cash (coins or bills) and get change, after which the latch on the toilet door must open before the user closes the door. Further, when the client enters the toilet and closes the door, it is blocked from the inside and cannot be unlocked from the outside. If the client does not go inside, after 2 minutes, the user should be able to pay for the service again. From the inside there should be a button that allows you to open the door at any time. Also, a key card should be introduced which would allow administrators or service personnel to get inside the toilet.



Так, необходимо создать механизм, который будет обладать следующими функциями:
Возможность видеть снаружи, занят ли туалет
Оплата услуги
Разблокировка двери, если внесена нужная сумма
Возможность выдачи сдачи
Разблокировка двери с внутренней стороны
Разблокировка дверей по ключу

Алгоритм работы:
Вся система будет собрана на плате Arduino. При желании, можно взять NodeMCU, у которой имеется WI-FI и Блютуз модули, для передачи данных в интернет, но для этого необходимо подключение к интернету. NodeMCU можно использовать, если необходимо видеть сумму прибыли в реальном времени или передавать какие-то данные. С помощью POST-запроса возможно сделать передачу данных в гугл таблицу или на собственный сервер, но, повторюсь, что для этого необходимо подключение к интернету. Однако, если потребуется проект на NodeMCU, его с легкостью можно туда перенести, так как у них практически нет различий в архитектуре самого микроконтроллера. 
Предлагаю смоделировать ситуацию. Пользователь подходит к туалету, видит занят ли туалет, для этого необходимо использовать RGB светодиод, либо ленту, где красный цвет (255, 0, 0) - “Занято”, а зеленый (0, 255, 0) - “Свободно”. 

Пример подключения светодиода: https://clck.ru/32otGm
Также эта информация должна дублироваться на LСD-экране. Например можно использовать LСD Display 2x16. Для этого, в коде необходимо создать переменную “флаг”, которая будет иметь значение типа bool, то-есть “true” или “false”, в зависимости от того, занят ли туалет. Если туалет свободен, то 
при внесении денег, на экране необходимо выводить сумму. 
Вот пример подключения: https://habr.com/ru/post/307518/


В цикле нужно проверять, пока внесенная сумма не будет больше или равна (>=) стоимости посещения, а затем выдавать сдачу, если она есть и разблокировать дверь. Когда человек войдет внутрь и дверь закроется, флаг, отвечающий за нахождение человека внутри, должен поменять значение на “true”, а на светодиоде и экране должна вывестись соответствующая информация. Потом идет проверка, если флаг == true и кнопка выхода из туалета нажата, то открывать затвор, до того момента, как дверь открыта, а затем закрывать его и сбрасывать флаг. Открытие двери по ключу, реализовать с помощью RFID-модуля. 
Пример подключения RFID: https://radioprog.ru/post/816?ysclid=lb3hqvssi5254022726

ВАЖНО! Сделать несколько ключей и хранить хотя бы один у себя, для того, чтобы в случае утери не было проблем. Модуль считывает рфид сигнал и если в туалете никого нет, то разблокирует дверь. Можно сделать так, чтобы если дверь открылась по ключу, на дисплее высвечивалась надпись “Технические работы” и свет сигнального светодиода менялся на желтый.
Для замка рекомендуется использовать сервопривод. 
Пример подключения: https://clck.ru/32ouFt

Пример статьи: https://habr.com/ru/post/233139/
Питание микроконтроллера должно происходить от 5 до 12 V. Для этого необходимо подключать напряжение в пину Vin, а заземление к GND через блок питания.

Рекомендуется отдать работу исполнителю или группе людей из одного города с заказчиком, для того, чтобы оба могли быть в коннекте, купить нужные комплектующие и собрать систему. Ниже я привел список подзадач, которые необходимы для разработки проекта. Это нужно для того, чтобы тимлид, если он будет, мог распределить задачи. Если же исполнитель один, то определить оплату за одну задачу и ускорить темпы разработки.

Подзадачи:
Разработка блок-схемы для программирования алгоритма.
Подключение и прошивка монетоприемника.
Подключение и прошивка купюроприемника.
Подключение периферийных устройств (дисплей, светодиод, сервопривод и тд.).
Разработка системы замков на основе сервоприводов.
Соединение всего воедино.
Тестирование проекта.


